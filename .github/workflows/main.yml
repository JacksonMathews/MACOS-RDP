name: 'Deploy macOS VM with GUI (VNC) - Fixed'

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Set User Password and Enable Remote Management (VNC/Screen Sharing)
        env:
          # This uses the SSH_PASSWORD secret you created in your repository settings
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
        run: |
          echo "Setting password for existing user 'runner'..."
          # Set the password for the existing 'runner' user
          sudo dscl . -passwd /Users/runner "$SSH_PASSWORD"
          
          echo "Enabling VNC service for user 'runner'..."
          # Enable and configure Apple Remote Desktop (Screen Sharing/VNC) for the 'runner' user
          sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart -activate -configure -access -on -users runner -privs -all -restart -agent -menu
          
          # Also enable SSH for backup access/troubleshooting
          sudo systemsetup -setremotelogin on

      - name: Install and Run ngrok to Tunnel VNC and SSH
        env:
          # This uses the NGROK_TOKEN secret you created in your repository settings
          NGROK_TOKEN: ${{ secrets.NGROK_TOKEN }}
        run: |
          echo "Installing and running ngrok..."
          brew install --cask ngrok
          ngrok authtoken $NGROK_TOKEN
          
          # Create a tunnel for VNC (port 5900) and run it in the background
          echo "Starting VNC tunnel..."
          ngrok tcp 5900 &
          
          # Create a tunnel for SSH (port 22) and run it in the background
          echo "Starting SSH tunnel (for backup)..."
          ngrok tcp 22 &

      - name: Keep VM Alive and Display Connection Info
        run: |
          echo "VM is getting ready. Please wait a minute for ngrok to provide the addresses."
          sleep 10 # Wait for ngrok to initialize
          
          # Fetch and display the public VNC and SSH addresses from the ngrok API
          curl -s http://localhost:4040/api/tunnels > tunnels.json
          VNC_URL=$(jq -r '.tunnels[] | select(.proto=="tcp" and .config.addr=="localhost:5900") | .public_url' tunnels.json | sed 's/tcp:\/\///')
          SSH_URL=$(jq -r '.tunnels[] | select(.proto=="tcp" and .config.addr=="localhost:22") | .public_url' tunnels.json | sed 's/tcp:\/\///')

          echo "--------------------------------------------------------------------"
          echo "âœ… VNC (GUI) ADDRESS: $VNC_URL"
          echo "   USER: runner"
          echo "   PASSWORD: [The password you set in SSH_PASSWORD secret]"
          echo "--------------------------------------------------------------------"
          echo "SSH (CLI) ADDRESS: ssh runner@$SSH_URL"
          echo "--------------------------------------------------------------------"
          
          # Keep the job running for 6 hours
          echo "VM will stay alive for 6 hours."
          sleep 21600
